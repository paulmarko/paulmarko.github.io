{"version":3,"sources":["ImageGallery.js","ImageUploader.js","ImageMain.js","ResultApp.js","App.js","serviceWorker.js","index.js"],"names":["ImageGallery","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","galleryImagesJSON","removeImage","handleGalleryImageClick","rows","map","row","index","react_default","a","createElement","key","className","delete","onClick","id","index_es","icon","faTimesCircle","size","color","faCircle","src","full_path","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","Component","ImageUploader","style","backgroundColor","messageUploader","onSubmit","onFormSubmit","type","onChange","ImageMain","imageMainSource","ResultApp","imageAnalyzeResult","console","log","faceId","faceAttributes","age","FaceDetector","_this","self","assertThisInitialized","url","axios","headers","Access-Control-Allow-Origin","content-type","then","response","data","length","msg","cleanedImages","state","gallery_images_json","filter","image","newImgSrc","setState","image_main_source","catch","error","gallery_images_found","file","uploading","message_uploader","image_analyze_result","bind","fileUpload","analyzeImage","refreshGallery","get","timer","_this2","setTimeout","e","_this3","preventDefault","undefined","toConsumableArray","concat","setResetMessageUploader","target","reset","theFile","files","every","formData","FormData","append","post","process","event","idClicked","rowImage","config","Content-Type","Ocp-Apim-Subscription-Key","params","returnFaceId","returnFaceLandmarks","returnFaceAttributes","statusText","margin","padding","src_ImageGallery","src_ResultApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3faf1f5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    \r\n    render() {\r\n      const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n      };\r\n      const {galleryImagesJSON, removeImage, handleGalleryImageClick} = this.props;\r\n      const rows = galleryImagesJSON.map((row, index) => {\r\n        return (\r\n          <div key={index} className=\"gallery-img fadein\">\r\n            {row.delete === 1 ? (\r\n            <div onClick={() => removeImage(row.id)} className='delete'>\r\n              <FontAwesomeIcon icon={faTimesCircle} size='1x' color=\"red\" />\r\n            </div>\r\n            ) : (\r\n            <div className='delete-none'>\r\n              <FontAwesomeIcon icon={faCircle} size='1x' color=\"green\" />\r\n            </div>\r\n            )}\r\n            <img className=\"image-thumb\" onClick={handleGalleryImageClick}  id={row.id} src={row.full_path} />\r\n          </div>\r\n        );\r\n      });\r\n      return <Slider {...settings}>{rows}</Slider>;\r\n    }\r\n  }\r\n\r\nexport default ImageGallery;","import React from 'react';\r\n\r\nexport default props => \r\n  <div style={{backgroundColor: '#efefef'}}>\r\n    <div className=\"message-uploader\"><h6>{props.messageUploader}</h6></div>\r\n    <form onSubmit={props.onFormSubmit} id=\"face-image-uploader\">\r\n          <input type=\"file\" onChange={props.onChange} /> \r\n          <button type=\"submit\">Upload</button>\r\n    </form>\r\n  </div>\r\n\r\n","import React from 'react'\r\n\r\nexport default props => \r\n  <div className=\"image-main-container\"><img className=\"image-main fadein-image-main\"  src={props.imageMainSource} /></div>","import React, {Component} from 'react';\r\n\r\nclass ResultApp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    componentDidMount() {\r\n  \r\n    }\r\n    render(){\r\n      const imageAnalyzeResult = this.props;\r\n      const rows = imageAnalyzeResult.imageAnalyzeResult.map((row, index) => { \r\n        {console.log(row)}\r\n        return(\r\n          <div key={index} className=\"row\">\r\n            <div className=\"col-sm-2\"></div>\r\n            <div className=\"col-sm-8\">\r\n              <h3>Result</h3>\r\n              <div>\r\n\r\n                <p>FaceId: {row.faceId}</p>\r\n                <p>Age: {row.faceAttributes.age}</p>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-2\"></div>\r\n          </div>\r\n        );\r\n      });\r\n      return <div>{rows}</div>;\r\n    }\r\n  }\r\n\r\nexport default ResultApp;","// must be loaded first for dependency\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import $ from 'jquery';\n//import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'; // poppper, but not jquery\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'; // import axios, { post } from 'axios';\nimport ImageGallery from './ImageGallery';\nimport ImageUploader from './ImageUploader';\nimport ImageMain from './ImageMain';\nimport ResultApp from './ResultApp';\n// azure demo: http://leadtactic.com/faces/detectFaces.html\n\nclass FaceDetector extends Component {\n    constructor(props){\n      super(props);\n      this.state ={\n        gallery_images_json : [],\n        gallery_images_found: false,\n        file:null,\n        uploading: false,\n        image_main_source: '',\n        message_uploader : '',\n        image_analyze_result : []\n      }\n      this.onFormSubmit = this.onFormSubmit.bind(this)\n      this.onChange = this.onChange.bind(this)\n      this.fileUpload = this.fileUpload.bind(this)\n      this.handleGalleryImageClick = this.handleGalleryImageClick.bind(this);\n      this.analyzeImage = this.analyzeImage.bind(this);\n    }\n    componentDidMount(){\n      this.refreshGallery();\n    }\n    refreshGallery() {\n      let self = this;\n      let url = 'https://leadtactic.com/api/face-gallery';\n      axios.get(url)\n        .then(function (response) {\n          //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n          // handle success\n          //logMe(response);\n          if (response.data.data.length < 1) {\n            self.setState({\n              gallery_images_found : false,\n              image_main_source: ''\n            });\n          } else {\n            let src = response.data.data[0].full_path; //console.log(src);\n            self.setState({\n              gallery_images_found : true,\n              image_main_source: src\n            });\n          }\n          //logMeStop(response.data.data);\n          self.setState({\n              gallery_images_json: response.data.data\n          })\n        })\n        .catch(error => self.setState({ error }));\n    }\n    setResetMessageUploader(msg,timer) {\n      this.setState({\n        message_uploader : msg\n      });\n      let messageTimer = setTimeout( () => {\n        this.setState({\n          message_uploader : ''\n        });\n      }, timer);\n    }\n    onFormSubmit(e){ \n      // Stop form submit\n      e.preventDefault() \n      if(this.state.file != null || this.state.file != undefined){\n          this.fileUpload(this.state.file).then((response)=>{\n            console.log(response.data);\n            this.setState({\n              file:null,\n              uploading: false,\n              gallery_images_json : [...this.state.gallery_images_json, response.data.data],\n              image_main_source : response.data.data.full_path\n            });\n          });\n          this.setResetMessageUploader('Image Uploaded Success',3000)\n          // clear form\n          e.target.reset();\n      } else {\n        this.setResetMessageUploader('No image selected, click \"Choose File\".',3000)\n        return\n      }\n    }\n    onChange(e) { \n      let theFile = e.target.files[0];\n      // #1 Catching wrong file types on the client\n      const types = ['image/png', 'image/jpeg', 'image/gif']\n      if (types.every(type => theFile.type !== type)) {\n        //errs.push(`'${file.type}' is not a supported format`)\n        this.setResetMessageUploader('Not a supported format',3000)\n        return\n      }\n      \n      // #2 Catching files that are too large on the client\n      // 500000 = 500kb / 5000000 = 5000kb, 5mb\n      //console.log(theFile.size);\n      let maxFileSizeMb = 5000000;\n      if (theFile.size > maxFileSizeMb) {\n        //errs.push(`'${file.name}' is too large, please pick a smaller file`)\n        this.setResetMessageUploader('Image too large, must be less than ' + maxFileSizeMb + ' MB.',3000)\n        return\n      }\n      this.setState({file:theFile})\n    }\n    fileUpload(file){\n      this.setState({ uploading: true })\n      const url = process.env.REACT_APP_LT_URL_IMG_UPLOAD;\n      const formData = new FormData();\n      // input field name:file_img_faces\n      formData.append('file_img_faces',file);\n  \n      const config = {\n          headers: {\n              'Access-Control-Allow-Origin': '*',\n              //'content-type': 'multipart/form-data',\n              'content-type': 'application/x-www-form-urlencoded'\n          }\n      }\n      \n      let self = this;\n      return axios.post(url, formData,config);\n        /*\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(error => self.setState({ error }));\n  \n        return response;\n        */\n    }\n    removeImage = id => {\n      let self = this;\n      // send to server for deletion\n      const url = 'https://leadtactic.com/api/face-image/' + id;\n      const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'content-type': 'multipart/form-data',\n            'content-type': 'application/x-www-form-urlencoded'\n        }\n      }\n\n      axios.delete(url,config)\n      .then(function (response) {\n        //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n        if (response.data.data.length < 1) {\n          // didn't work, provide message here\n          console.log('delete: failure in removeImage()');\n        } else {\n          console.log(response.data.data[0].msg);\n          if (response.data.data[0].msg == 'deleted') {\n            // delete item from json\n            let cleanedImages = self.state.gallery_images_json.filter(image => image.id !== id);\n            let newImgSrc = cleanedImages[0].full_path;\n            self.setState({\n              gallery_images_json: cleanedImages,\n              image_main_source : newImgSrc\n            });\n          }\n        }\n      })\n      .catch(error => self.setState({ error }));\n\n    }\n    handleGalleryImageClick(event) {\n      // get id and use it in main image\n      //console.log(event.target.id);\n      let idClicked =event.target.id;\n      let galleryImagesJSON = this.state.gallery_images_json;\n      //console.log(galleryImagesJSON);\n      let rowImage = galleryImagesJSON.filter(function(row) {\n          //console.log(\"ID\" + idClicked);\n          if (row.id == idClicked) {\n            return row;\n          }\n      });\n      console.log(rowImage[0].full_path);\n      this.setState({\n        image_main_source : rowImage[0].full_path\n      });\n    }\n    analyzeImage() {\n      // Replace <Subscription Key> with your valid subscription key.\n      let subscriptionKey = \"71122c33d60d4284bf612e69f3c61092\";\n\n      // NOTE: You must use the same region in your REST call as you used to\n      // obtain your subscription keys. For example, if you obtained your\n      // subscription keys from westus, replace \"westcentralus\" in the URL\n      // below with \"westus\".\n      //\n      // Free trial subscription keys are generated in the westcentralus region.\n      // If you use a free trial subscription key, you shouldn't need to change \n      // this region.\n      let url =\"https://eastus2.api.cognitive.microsoft.com/face/v1.0/detect\";\n\n      // Request parameters.\n      let params = {\n          \"returnFaceId\": \"true\",\n          \"returnFaceLandmarks\": \"false\",\n          \"returnFaceAttributes\":\n              \"age,gender,headPose,smile,facialHair,glasses,emotion,\" +\n              \"hair,makeup,occlusion,accessories,blur,exposure,noise\"\n      };\n\n      // Display the image.\n      let sourceImageUrl = this.state.image_main_source;\n\n      // Perform the REST API call\n      let formData =  {\n        'url': sourceImageUrl\n      };\n  \n      const config = {\n          headers: {\n              //'Access-Control-Allow-Origin': '*',\n              //'content-type': 'application/x-www-form-urlencoded',\n              \"Content-Type\":\"application/json\",\n              \"Ocp-Apim-Subscription-Key\": subscriptionKey\n          },\n          params : params\n      }\n      \n      let self = this;\n      axios.post(url, formData,config)\n      .then(function (response) {\n        //console.log('XXX' + response.data);\n        //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n        if (response.statusText == \"OK\") { \n            //console.log(\"In success\");\n            console.log(response.data[0]);\n            if (response.data[0] != undefined) {\n              console.log('Have FAceI');\n              self.setState({\n                image_analyze_result : response.data\n              });\n            } else {\n              self.setResetMessageUploader('No facial image detected!',3000)\n            }\n        } else { \n            console.log('In Failure');\n            self.setResetMessageUploader('Image was not able to be processed!',3000)\n        }\n      })\n      .catch(error => self.setState({ error }));   \n    }\n    render() {\n      return(\n      <div style={{margin:0, padding:0}}>\n        <div className=\"pt-4\"></div>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-1\"></div>\n            <div className=\"col-sm-5\">\n              <div className=\"row\">\n                <div className=\"col-sm-1\"></div>\n                <div className=\"col-sm-10\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-8\">\n                      <h3>Image Main</h3>\n                      <ImageMain \n                        imageMainSource={this.state.image_main_source}\n                      />\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <br /><br /><br /><br />\n                      <button onClick={this.analyzeImage}>Analyze</button>\n                    </div>\n                  </div>\n                  <h3>ImageGallery</h3>\n                  <ImageGallery\n                    galleryImagesJSON={this.state.gallery_images_json}\n                    removeImage={this.removeImage}\n                    handleGalleryImageClick={this.handleGalleryImageClick}\n                  />\n                  <div className=\"clear-both\"></div>\n                  <h3>Image Uploader</h3>\n                  <ImageUploader \n                    onFormSubmit={this.onFormSubmit}\n                    onChange={this.onChange}\n                    messageUploader={this.state.message_uploader}\n                  />\n                </div>\n                <div className=\"col-sm-1\"></div>\n              </div>\n            </div>\n            <div className=\"col-sm-5\">\n              <ResultApp\n                imageAnalyzeResult={this.state.image_analyze_result}\n              />\n            </div>\n            <div className=\"col-sm-1\"></div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n\nexport default FaceDetector;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FaceDetector from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<FaceDetector />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}