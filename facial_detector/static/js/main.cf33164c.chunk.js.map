{"version":3,"sources":["AppHeader.js","ImageUploader.js","AppHeaderSub.js","AppGallery.js","SnackbarMsg.js","Result.js","ProgressBar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","props","classes","appTitle","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","button","margin","spacing","unit","float","onFileChooserChange","Button_default","size","htmlFor","type","onChange","id","style","display","typography","useNextVariants","minWidth","maxWidth","height","flexDirection","flexWrap","justifyContent","alignItems","alignContent","details1","width","order","details2","bullet","transform","title","fontSize","pos","marginBottom","Card_default","CardContent_default","gutterBottom","src_ImageUploader","AppGallery","_this$props","this","galleryImagesJSON","handleGalleryImageClick","removeImage","imageMainSource","GridList_default","gridList","cols","map","row","GridListTile_default","key","full_path","imgSelected","classNames","imgCursor","src","onClick","alt","GridListTileBar_default","titleBarSelected","titleBar","actionIcon","delete","IconButton_default","aria-label","Delete_default","React","Component","overflow","backgroundColor","palette","background","paper","borderBottom","cursor","primary","light","extendedIcon","marginRight","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","dark","amber","icon","iconVariant","opacity","message","Icon","SnackbarContent_default","aria-describedby","CustomizedSnackbars","successMsg","successMsgState","successMsgTimer","successMsgType","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","Result","imageAnalyzeResult","rows","index","root1","Chip_default","avatar","Avatar_default","label","faceAttributes","gender","age","chip","smile","toFixed","TagFaces_default","SentimentDissatisfied_default","makeup","eyeMakeup","lipMakeup","Done_default","HighlightOff_default","glasses","root2","card1","index_es","primaryAvatar","secondaryAvatar","subheader","Divider_default","Grid_default","container","item","xs","md","demo","List_default","dense","ListItem_default","ListItemText_default","secondary","facialHair","beard","moustache","sideburns","hair","bald","card2","emotion","anger","contempt","disgust","fear","card3","happiness","neutral","sadness","surprise","Object","keys","length","notDetectedDiv","notDetected","padding","textAlign","red","card","details","media","backgroundPosition","avrow","bigAvatar","ProgressBar","state","progressBarState","inner","colorPrimary","barColorPrimary","FaceDetector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","progress_bar_state","self","assertThisInitialized","url","process","axios","headers","Access-Control-Allow-Origin","content-type","then","response","data","setResetMessage","msg","cleanedImages","gallery_images_json","filter","image","newImgSrc","image_main_source","setTimeout","analyzeImage","catch","file","uploading","image_analyze_result","sb_msg","sb_msg_type","sb_msg_state","sb_msg_timer","bind","fileUpload","refreshGallery","get","_this2","timer","arguments","undefined","msgType","e","_this3","theFile","target","files","every","fileProcess","_this4","concat","toConsumableArray","formData","FormData","append","post","event","_this5","idClicked","rowImage","progressBarOn","progressBarOff","config","Content-Type","Ocp-Apim-Subscription-Key","params","returnFaceId","returnFaceLandmarks","returnFaceAttributes","statusText","border","justify","gridinner","zeroMinWidth","Paper_default","src_AppHeader","src_ProgressBar","src_AppHeaderSub","src_AppGallery","src_Result","SnackbarMsg","gridTemplateColumns","gridGap","text","whiteSpace","divider","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gZAiCeA,2BA1BA,CACbC,KAAM,CACJC,SAAU,IAwBCF,CApBf,SAAmBG,GAAO,IAChBC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,SAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQH,MACtBK,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAS,SAASC,MAAM,WAC9BN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,QAAQ,KAAKH,MAAM,WAC5BP,2DCQEL,2BAxBA,SAAAgB,GAAK,MAAK,CACvBC,OAAQ,CACNC,OAAQF,EAAMG,QAAQC,KACtBC,MAAM,WAqBKrB,CAjBf,SAAuBG,GAAO,IACpBC,EAAiCD,EAAjCC,QAASkB,EAAwBnB,EAAxBmB,oBAEjB,OACAhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQiB,KAAK,QAAQT,QAAQ,WAAWH,MAAM,UAAUH,UAAWL,EAAQa,QAC3EX,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAAf,wBAEAnB,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOC,SAAUL,EAAqBM,GAAG,SAASC,MAAO,CAACC,QAAQ,aCkDrE9B,2BA9DA,SAAAgB,GAAK,MAAK,CACvBe,WAAY,CACVC,iBAAiB,GAEnB/B,KAAM,CACJgC,SAAU,IACVC,SAAU,OACVC,OAAQ,OACRL,QAAS,OACTM,cAAe,MACfC,SAAU,SAEVC,eAAgB,eAChBC,WAAW,aACXC,aAAa,cAEfC,SAAU,CACRC,MAAM,MACNC,MAAO,IACRzC,SAAU,KAEX0C,SAAU,CACRF,MAAM,MACNC,MAAO,IACPzC,SAAU,KAEZ2C,OAAQ,CACNf,QAAS,eACTZ,OAAQ,QACR4B,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MA2BHlD,CAvBf,SAAsBG,GAAO,IACnBC,EAAiCD,EAAjCC,QAASkB,EAAwBnB,EAAxBmB,oBAEjB,OACMhB,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAME,UAAWL,EAAQH,MACvBK,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAaE,UAAWL,EAAQqC,UAC9BnC,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYE,UAAWL,EAAQ2C,MAAOnC,MAAM,gBAAgByC,cAAY,GAAxE,oCAIF/C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAaE,UAAWL,EAAQwC,UAC5BtC,EAAAC,EAAAC,cAAC8C,EAAD,CACIhC,oBAAqBA,8GCTjCiC,mLAEK,IAAAC,EACwFC,KAAKtD,MAA5FC,EADDoD,EACCpD,QAASsD,EADVF,EACUE,kBAAmBC,EAD7BH,EAC6BG,wBAAyBC,EADtDJ,EACsDI,YAAaC,EADnEL,EACmEK,gBAE1E,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQH,MACtBK,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAUE,UAAWL,EAAQ2D,SAAUC,KAAM,KAC1CN,EAAkBO,IAAI,SAAAC,GAAG,OACxB5D,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACE6D,IAAKF,EAAItC,GACTnB,UAAWoD,IAAoBK,EAAIG,UAAYjE,EAAQkE,YAAc,IACrEhE,EAAAC,EAAAC,cAAA,OACEC,UAAW8D,IAAWnE,EAAQoE,WAC9BC,IAAKP,EAAIG,UACTK,QAASf,EACT/B,GAAIsC,EAAItC,GACR+C,IAAI,KACNrE,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CACEwC,MAAM,GACN3C,QAAS,CACPH,KAAO4D,IAAoBK,EAAIG,UAAYjE,EAAQyE,iBAAmBzE,EAAQ0E,SAC9E/B,MAAO3C,EAAQ2C,OAEjBgC,WACkB,IAAfb,EAAIc,QACL1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAYmE,QAAS,kBAAMd,EAAYM,EAAItC,KAAKhB,MAAM,YAAYH,UAAWL,EAAQa,OAAQiE,aAAW,UACpG5E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,qBA3BG6E,IAAMC,WA4ChBrF,uBAnFA,SAAAgB,GAAK,MAAK,CACvBf,KAAM,CACJ6B,QAAS,OACTO,SAAU,OACVC,eAAgB,eAChBgD,SAAU,SACVC,gBAAiBvE,EAAMwE,QAAQC,WAAWC,OAE5C3B,SAAU,CACR1B,SAAU,SAEVS,UAAW,iBAEbwB,YAAa,CACXqB,aAAa,mBAEfnB,UAAW,CACToB,OAAQ,WAEV7C,MAAO,CACLnC,MAAOI,EAAMwE,QAAQK,QAAQC,OAE/BjB,iBAAkB,CAChBY,WACE,wFAEJX,SAAU,CACRW,WACE,oGAEJxE,OAAQ,CACNC,OAAQF,EAAMG,QAAQC,MAExB2E,aAAc,CACZC,YAAahF,EAAMG,QAAQC,QAiDhBpB,CAAmBuD,mKCzE5B0C,GAAc,CAClBC,QAASC,IACTC,QAASC,KACTC,MAAOC,IACPC,KAAMC,MA0DR,IAAMC,GAA2B1G,qBAvDjB,SAAAgB,GAAK,MAAK,CACxBe,WAAY,CACVC,iBAAiB,GAEnBkE,QAAS,CACPX,gBAAiBoB,KAAM,MAEzBL,MAAO,CACLf,gBAAiBvE,EAAMwE,QAAQc,MAAMM,MAEvCJ,KAAM,CACJjB,gBAAiBvE,EAAMwE,QAAQK,QAAQe,MAEzCR,QAAS,CACPb,gBAAiBsB,KAAM,MAEzBC,KAAM,CACJ9D,SAAU,IAEZ+D,YAAa,CACXC,QAAS,GACThB,YAAahF,EAAMG,QAAQC,MAE7B6F,QAAS,CACPnF,QAAS,OACTS,WAAY,YA8BiBvC,CA1BjC,SAA2BG,GAAO,IACxBC,EAAwCD,EAAxCC,QAASK,EAA+BN,EAA/BM,UAAWwG,EAAoB9G,EAApB8G,QAASlG,EAAWZ,EAAXY,QAC/BmG,EAAOjB,GAAYlF,GAEzB,OACET,EAAAC,EAAAC,cAAC2G,GAAA5G,EAAD,CACEE,UAAW8D,IAAWnE,EAAQW,GAAUN,GACxC2G,mBAAiB,kBACjBH,QACE3G,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,kBAAkBnB,UAAWL,EAAQ6G,SAC5C3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAMzG,UAAW8D,IAAWnE,EAAQ0G,KAAM1G,EAAQ2G,eACjDE,OA0BLI,oLACK,IAAA7D,EAC2EC,KAAKtD,MAA/EC,EADDoD,EACCpD,QAASkH,EADV9D,EACU8D,WAAYC,EADtB/D,EACsB+D,gBAAiBC,EADvChE,EACuCgE,gBAAiBC,EADxDjE,EACwDiE,eAE/D,OACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkH,GAAAnH,EAAD,CACEoH,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,KAAMP,EACNQ,iBAAkBP,GAGpBlH,EAAAC,EAAAC,cAACkG,GAAD,CAEI3F,QAAS0G,EACTR,QAASK,EACT7G,UAAWL,EAAQc,kBAnBGkE,IAAMC,WA+BzBrF,wBAxCC,SAAAgB,GAAK,MAAK,CACxBe,WAAY,CACVC,iBAAiB,GAEnBd,OAAQ,CACNA,OAAQF,EAAMG,QAAQC,QAmCXpB,CAAoBqH,2OChB7BW,oLACI,IAAAxE,EACmDC,KAAKtD,MAAtDC,EADFoD,EACEpD,QAAS6H,EADXzE,EACWyE,mBAAoBpE,EAD/BL,EAC+BK,gBAC/BqE,EAAOD,EAAmBhE,IAAI,SAACC,EAAKiE,GACtC,OACA7H,EAAAC,EAAAC,cAAA,OAAK4D,IAAK+D,GACR7H,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgI,OAClB9H,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACE+H,OAAQhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAQiB,KAAK,QAAQmD,IAAI,OAAOF,IAAKZ,IAC7C2E,MAAOtE,EAAIuE,eAAeC,OAAS,MAAQxE,EAAIuE,eAAeE,IAAM,OACpElI,UAAWL,EAAQwI,KACnBhI,MAAqC,SAA9BsD,EAAIuE,eAAeC,OAAoB,UAAY,cAE5DpI,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACE+H,OACEhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,MAC+B,IAA3B2D,EAAIuE,eAAeI,OAAaC,QAAQ,GAAK,GAAKxI,EAAAC,EAAAC,cAACuI,GAAAxI,EAAD,MAAeD,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,OAGvEiI,MAAO,UAAuC,IAA3BtE,EAAIuE,eAAeI,OAAaC,QAAQ,GAAK,IAChErI,UAAWL,EAAQwI,OAErBtI,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACEiI,MAAO,SACP1B,MAA+C,IAAxC5C,EAAIuE,eAAeQ,OAAOC,YAA8D,IAAxChF,EAAIuE,eAAeQ,OAAOE,UAAsB7I,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,MAAeD,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,MACtHE,UAAWL,EAAQwI,OAGrBtI,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACEiI,MAAM,UACN1B,KAAsC,cAA/B5C,EAAIuE,eAAea,QAA2BhJ,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,MAAkBD,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,MACvEE,UAAWL,EAAQwI,QAK3BtI,EAAAC,EAAAC,cAAA,OAAMC,UAAWL,EAAQmJ,OACvBjJ,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAME,UAAWL,EAAQoJ,OACvBlJ,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEnB,OACEhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAQ2E,aAAW,GAAGzE,UAAyC,SAA9ByD,EAAIuE,eAAeC,OAAoBtI,EAAQsJ,cAAgBtJ,EAAQuJ,iBAAxG,MAIF5G,MAAM,OACN6G,UAAU,SAEZtJ,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,KACED,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMwJ,WAAS,EAAC5I,QAAS,IACvBb,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMyJ,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB5J,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ+J,MACtB7J,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,CAAM8J,OAAO,GACT/J,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACID,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACEsF,QAAQ,QACR2E,WAAkD,IAAtCtG,EAAIuE,eAAegC,WAAWC,OAAa5B,QAAQ,GAAK,OAG1ExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,YACR2E,WAAsD,IAA1CtG,EAAIuE,eAAegC,WAAWE,WAAiB7B,QAAQ,GAAK,OAG9ExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,YACR2E,WAAsD,IAA1CtG,EAAIuE,eAAegC,WAAWG,WAAiB9B,QAAQ,GAAK,OAG9ExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,OACR2E,WAA2C,IAA/BtG,EAAIuE,eAAeoC,KAAKC,MAAYhC,QAAQ,GAAK,aASjFxI,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAME,UAAWL,EAAQ2K,OACvBzK,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEnB,OACEhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAQ2E,aAAW,SAASzE,UAAyC,SAA9ByD,EAAIuE,eAAeC,OAAoBtI,EAAQsJ,cAAgBtJ,EAAQuJ,iBAA9G,MAIF5G,MAAM,MACN6G,UAAU,YAEZtJ,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,KACED,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMwJ,WAAS,EAAC5I,QAAS,IACvBb,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMyJ,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB5J,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ+J,MACtB7J,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,CAAM8J,OAAO,GACT/J,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACID,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACEsF,QAAQ,QACR2E,WAA+C,IAAnCtG,EAAIuE,eAAeuC,QAAQC,OAAanC,QAAQ,GAAK,OAGvExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,WACR2E,WAAkD,IAAtCtG,EAAIuE,eAAeuC,QAAQE,UAAgBpC,QAAQ,GAAK,OAG1ExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,UACR2E,WAAiD,IAArCtG,EAAIuE,eAAeuC,QAAQG,SAAerC,QAAQ,GAAK,OAGzExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,OACR2E,WAA8C,IAAlCtG,EAAIuE,eAAeuC,QAAQI,MAAYtC,QAAQ,GAAK,aASpFxI,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAME,UAAWL,EAAQiL,OACvB/K,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACEnB,OACEhI,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAQ2E,aAAW,SAASzE,UAAyC,SAA9ByD,EAAIuE,eAAeC,OAAoBtI,EAAQsJ,cAAgBtJ,EAAQuJ,iBAA9G,MAIF5G,MAAM,OACN6G,UAAU,YAEZtJ,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,KACED,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMwJ,WAAS,EAAC5I,QAAS,IACvBb,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMyJ,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB5J,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ+J,MACtB7J,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,CAAM8J,OAAO,GACT/J,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACID,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACEsF,QAAQ,YACR2E,WAAmD,IAAvCtG,EAAIuE,eAAeuC,QAAQM,WAAiBxC,QAAQ,GAAK,OAG3ExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,UACR2E,WAAiD,IAArCtG,EAAIuE,eAAeuC,QAAQO,SAAezC,QAAQ,GAAK,OAGzExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,UACR2E,WAAiD,IAArCtG,EAAIuE,eAAeuC,QAAQQ,SAAe1C,QAAQ,GAAK,OAGzExI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,KACED,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CACIsF,QAAQ,WACR2E,WAAkD,IAAtCtG,EAAIuE,eAAeuC,QAAQS,UAAgB3C,QAAQ,GAAK,iBAchG,OACExI,EAAAC,EAAAC,cAAA,WACCkL,OAAOC,KAAKzD,GAAM0D,OAAS,EAC1BtL,EAAAC,EAAAC,cAAA,WAAM0H,GAEN5H,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQyL,gBACtBvL,EAAAC,EAAAC,cAAA,MAAIC,UAAWL,EAAQ0L,aAAvB,gCACAxL,EAAAC,EAAAC,cAAA,KAAGC,UAAWL,EAAQ0L,aAAtB,uCA3LWzG,aAwMNrF,wBAlSA,SAAAgB,GAAK,MAAK,CACvBoH,MAAO,CACLnG,SAAU,IACVC,SAAU,OACVC,OAAQ,OACRL,QAAS,OACTM,cAAe,MACfC,SAAU,SAEVC,eAAgB,eAChBC,WAAW,aACXC,aAAa,cAEf+G,MAAO,CACLtH,SAAU,IACVC,SAAU,OACVC,OAAQ,OACRL,QAAS,OACTM,cAAe,MACfC,SAAU,SAEVC,eAAgB,eAChBC,WAAW,aACXC,aAAa,cAEfgH,MAAO,CACL9G,MAAM,MACNC,MAAO,IACRzC,SAAU,KAEX6K,MAAO,CACLrI,MAAM,MACNC,MAAO,IACPzC,SAAU,KAEZmL,MAAO,CACL3I,MAAM,MACNC,MAAO,IACPzC,SAAU,KAEZwJ,cAAe,CACb9I,MAAO,OACP2E,gBAAiB,WAEnBoE,gBAAiB,CACf/I,MAAO,OACP2E,gBAAiB,WAEnBuG,YAAY,CACVlL,MAAM,WAERiL,eAAgB,CACdE,QAAQ,OACR7K,OAAO,OACP8K,UAAU,UAEZ1D,OAAQ,CACN/C,gBAAiB0G,KAAI,KACrB/K,OAAQ,IAKVgL,KAAM,CACJhK,SAAU,OACVC,OAAQ,OACRG,eAAe,SACfR,QAAS,QAEXqK,QAAS,CACPrK,QAAS,OACTM,cAAe,UAEjBgK,MAAO,CACLjK,OAAQ,IACRkK,mBAAoB,cAEtBC,MAAO,CACLxK,QAAS,OACTQ,eAAgB,UAElBiK,UAAW,CACT7J,MAAO,IACPP,OAAQ,KAEVyG,KAAM,CACJ1H,OAAQF,EAAMG,QAAQC,QA4MXpB,CAAmBgI,IC/R5BwE,8MACFC,MAAQ,CACJzF,QAAS,2EAEL,IAAAxD,EACkCC,KAAKtD,MAAnCC,EADJoD,EACIpD,QAASsM,EADblJ,EACakJ,iBACjB,OACApM,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQH,MACvByM,GACGpM,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQuM,MAAO9K,MAAO,CAACmF,QAASvD,KAAKgJ,MAAMzF,mBAT7C3B,aAoBXrF,wBAtCA,CACbC,KAAM,CACJC,SAAU,EACViC,OAAO,MACPoD,gBAAgB,QAElBoH,MAAO,CACHxK,OAAO,MACPoD,gBAAgB,WAEpBqH,aAAc,CACZrH,gBAAiB,WAEnBsH,gBAAiB,CACftH,gBAAiB,YAwBNvF,CAAmBwM,ICJ5BM,eACF,SAAAA,EAAY3M,GAAM,IAAA4M,EAAA,OAAArB,OAAAsB,EAAA,EAAAtB,CAAAjI,KAAAqJ,IAChBC,EAAArB,OAAAuB,EAAA,EAAAvB,CAAAjI,KAAAiI,OAAAwB,EAAA,EAAAxB,CAAAoB,GAAAK,KAAA1J,KAAMtD,KAyJRyD,YAAc,SAAAhC,GACZmL,EAAKK,SAAS,CACZC,oBAAoB,IAGtB,IAAIC,EAAI5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAqB,IAGFS,EAAMC,yCAAqC7L,EASjD8L,IAAM1I,OAAOwI,EARE,CACbG,QAAS,CACLC,8BAA+B,IAE/BC,eAAgB,uCAKrBC,KAAK,SAAUC,GAEd,GAAIA,EAASC,KAAKA,KAAKpC,OAAS,EAE9B0B,EAAKW,gBAAgB,2CAA2C,IAAM,cAEtE,GAAkC,YAA9BF,EAASC,KAAKA,KAAK,GAAGE,IAAmB,CAE3C,IAAIC,EAAgBb,EAAKb,MAAM2B,oBAAoBC,OAAO,SAAAC,GAAK,OAAIA,EAAM1M,KAAOA,IAC5E2M,EAAYJ,EAAc,GAAG9J,UAEjCiJ,EAAKF,SACH,CACEgB,oBAAqBD,EACrBK,kBAAoBD,GACnB,WAEHjB,EAAKW,gBAAgB,iBADL,KACiC,WACjDQ,WAAY,WACVnB,EAAKoB,cAAa,GAAM,IAHV,QAQtBjL,KAAK2J,SAAS,CACZC,oBAAoB,MAGvBsB,MAAM,SAAArI,GAAK,OAAIgH,EAAKF,SAAS,CAAE9G,aAtMhCyG,EAAKN,MAAO,CACV2B,oBAAsB,GACtBQ,KAAK,KACLC,WAAW,EACXL,kBAAmB,GACnBM,qBAAuB,GACvBC,OAAS,GACTC,YAAc,GACdC,cAAe,EACfC,aAAc,IACd7B,oBAAoB,GAEtBN,EAAKzL,oBAAsByL,EAAKzL,oBAAoB6N,KAAzBzD,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAqB,KAC3BA,EAAKqC,WAAarC,EAAKqC,WAAWD,KAAhBzD,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAqB,KAClBA,EAAKpJ,wBAA0BoJ,EAAKpJ,wBAAwBwL,KAA7BzD,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAqB,KAhBfA,mFAmBhBtJ,KAAK4L,0DAGL5L,KAAK2J,SAAS,CACZC,oBAAoB,IAGtB,IAAIC,EAAO7J,KAGXiK,IAAM4B,IADI7B,2CAEPK,KAAK,SAAUC,GAGd,GAAIA,EAASC,KAAKA,KAAKpC,OAAS,EAC9B0B,EAAKF,SAAS,CACZC,oBAAoB,EACpBmB,kBAAmB,SAEhB,CACL,IAAI/J,EAAMsJ,EAASC,KAAKA,KAAK,GAAG3J,UAEhCiJ,EAAKF,SACH,CACEoB,kBAAmB/J,EACnB2J,oBAAqBL,EAASC,KAAKA,MAClC,WACHV,EAAKoB,cAAa,GAAM,QAI7BC,MAAM,SAAArI,GAAK,OAAIgH,EAAKF,SAAS,CAAE9G,oDAEpB4H,GAAkC,IAAAqB,EAAA9L,KAA9B+L,EAA8BC,UAAA7D,OAAA,QAAA8D,IAAAD,UAAA,GAAAA,UAAA,GAAxB,IAAKE,EAAmBF,UAAA7D,OAAA,QAAA8D,IAAAD,UAAA,GAAAA,UAAA,GAAX,UACrChM,KAAK2J,SAAS,CACZ6B,cAAe,EACfD,YAAcW,EACdZ,OAASb,EACTgB,aAAcM,IAEhBf,WAAY,WACVc,EAAKnC,SAAS,CACZ6B,cAAe,EACfD,YAAcW,EACdZ,OAAS,GACTG,aAAc,KAEfM,+CAEeI,GAAG,IAAAC,EAAApM,KACjBqM,EAAUF,EAAEG,OAAOC,MAAM,GAG7B,GADc,CAAC,YAAa,aAAc,aAChCC,MAAM,SAAAvO,GAAI,OAAIoO,EAAQpO,OAASA,IACvC+B,KAAKwK,gBAAgB,0CAA0C,IAAM,aADvE,CASI6B,EAAQtO,KAFQ,IAIlBiC,KAAKwK,gBAAgB,+DAAuF,IAAM,SAIpHxK,KAAK2J,SAAS,CACZwB,KAAKkB,GACJ,WACDD,EAAKK,qDAGGN,GAAG,IAAAO,EAAA1M,KACT6J,EAAO7J,KACX,GAAuB,OAApBA,KAAKgJ,MAAMmC,WAAqCc,IAApBjM,KAAKgJ,MAAMmC,KA6BxC,OAJAnL,KAAK2J,SAAS,CACZC,oBAAoB,SAEtB5J,KAAKwK,gBAAgB,sDAAsD,IAAK,WA1B9ExK,KAAK2J,SAAS,CACZC,oBAAoB,IAGtB5J,KAAK2L,WAAW3L,KAAKgJ,MAAMmC,MAAMd,KAAK,SAACC,GACrCoC,EAAK/C,SACH,CACEwB,KAAK,KACLC,WAAW,EACXT,oBAAmB,CAAIL,EAASC,KAAKA,MAAlBoC,OAAA1E,OAAA2E,EAAA,EAAA3E,CAA2ByE,EAAK1D,MAAM2B,sBACzDI,kBAAoBT,EAASC,KAAKA,KAAK3J,WACtC,WAGDiJ,EAAKW,gBAAgB,eADL,KAC+B,WAC/CQ,WAAY,WACVnB,EAAKoB,cAAa,GAAM,IAHV,6CAiBjBE,GACTnL,KAAK2J,SAAS,CAAEyB,WAAW,IAE3B,IACMyB,EAAW,IAAIC,SAErBD,EAASE,OAAO,iBAAiB5B,GAWjC,OAAOlB,IAAM+C,KAdDhD,iDAcW6C,EATR,CACX3C,QAAS,CACLC,8BAA+B,IAE/BC,eAAgB,uFAgEF6C,GAAO,IAAAC,EAAAlN,KAEzBmN,EAAYF,EAAMX,OAAOnO,GAGzBiP,EAFoBpN,KAAKgJ,MAAM2B,oBAEFC,OAAO,SAASnK,GAC7C,GAAIA,EAAItC,IAAMgP,EACZ,OAAO1M,IAIbT,KAAK2J,SACH,CACEoB,kBAAoBqC,EAAS,GAAGxM,UAChCgJ,oBAAoB,GACnB,WACHsD,EAAKjC,cAAa,GAAM,4CAI0B,IAAzCoC,IAAyCrB,UAAA7D,OAAA,QAAA8D,IAAAD,UAAA,KAAAA,UAAA,GAArBsB,IAAqBtB,UAAA7D,OAAA,QAAA8D,IAAAD,UAAA,KAAAA,UAAA,GACjDqB,GACDrN,KAAK2J,SAAS,CACZC,oBAAoB,IAMxB,IAyBIiD,EAAY,CACd9C,IAJmB/J,KAAKgJ,MAAM+B,mBAO1BwC,EAAS,CACXrD,QAAS,CAGLsD,eAAe,mBACfC,4BAlCczD,oCAoClB0D,OAvBS,CACTC,aAAgB,OAChBC,oBAAuB,QACvBC,qBACI,+GAsBJhE,EAAO7J,KACXiK,IAAM+C,KA9BG,+DA8BOH,EAASU,GACxBlD,KAAK,SAAUC,GAEc,OAAxBA,EAASwD,gBACgB7B,IAArB3B,EAASC,KAAK,IAChBV,EAAKF,SAAS,CACZ0B,qBAAuBf,EAASC,OAE/B+C,GACDzD,EAAKF,SAAS,CACZC,oBAAoB,MAMxBC,EAAKF,SAAS,CACV0B,qBAAuB,KAExBiC,GACDzD,EAAKF,SAAS,CACZC,oBAAoB,MAMvB0D,GACDzD,EAAKF,SAAS,CACZC,oBAAoB,IAGxBC,EAAKW,gBAAgB,2BAA2B,KAAM,YAG3DU,MAAM,SAAArI,GAAK,OAAIgH,EAAKF,SAAS,CAAE9G,6CAGzB,IAEClG,EAAYqD,KAAKtD,MAAjBC,QACR,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQH,KAAM4B,MAAO,CAAC2P,OAAS,mBAE7ClR,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMwJ,WAAS,EAAC5I,QAAS,GAAIsQ,QAAQ,SAAS5P,MAAO,CAAC2P,OAAS,kBAC7DlR,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMwJ,WAAS,EAAC0H,QAAQ,SAAShR,UAAWL,EAAQsR,UAAW7P,MAAO,CAAC2P,OAAS,qBAC9ElR,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMyJ,MAAI,EAACC,GAAI,GAAI0H,cAAY,GAC7BrR,EAAAC,EAAAC,cAACoR,EAAArR,EAAD,KACID,EAAAC,EAAAC,cAACqR,EAAD,CAAWxR,SAAS,oCAEpBC,EAAAC,EAAAC,cAACsR,GAAD,CAAapF,iBAAkBjJ,KAAKgJ,MAAMY,qBAE1C/M,EAAAC,EAAAC,cAACuR,EAAD,CACEzQ,oBAAqBmC,KAAKnC,sBAG5BhB,EAAAC,EAAAC,cAACwR,EAAD,CACEnO,gBAAiBJ,KAAKgJ,MAAM+B,kBAC5B9K,kBAAmBD,KAAKgJ,MAAM2B,oBAC9BxK,YAAaH,KAAKG,YAClBD,wBAAyBF,KAAKE,4BAKtCrD,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAMyJ,MAAI,EAACC,GAAI,GAAI0H,cAAY,GAC7BrR,EAAAC,EAAAC,cAACoR,EAAArR,EAAD,KACED,EAAAC,EAAAC,cAACyR,GAAD,CACEpO,gBAAiBJ,KAAKgJ,MAAM+B,kBAC5BvG,mBAAoBxE,KAAKgJ,MAAMqC,2BAOzCxO,EAAAC,EAAAC,cAAC0R,GAAD,CACE3K,gBAAiB9D,KAAKgJ,MAAMwC,aAC5BxH,eAAgBhE,KAAKgJ,MAAMuC,YAC3B1H,WAAY7D,KAAKgJ,MAAMsC,OACvBvH,gBAAiB/D,KAAKgJ,MAAMyC,uBAjWb7J,aAwWZrF,wBAhYA,SAAAgB,GAAK,MAAK,CACvBf,KAAM,CACJ8L,QAA8B,EAArB/K,EAAMG,QAAQC,MAEzB2I,UAAW,CACTjI,QAAS,OACTqQ,oBAAqB,kBACrBC,QAAO,GAAAhC,OAA0B,EAArBpP,EAAMG,QAAQC,KAAnB,OAETsQ,UAAW,CACTxP,SAAS,KAEXwD,MAAO,CACLqG,QAAS/K,EAAMG,QAAQC,KACvB4K,UAAW,SACXpL,MAAOI,EAAMwE,QAAQ6M,KAAK7H,UAC1B8H,WAAY,SACZpP,aAAclC,EAAMG,QAAQC,MAE9BmR,QAAS,CACPrR,OAAM,GAAAkP,OAA0B,EAArBpP,EAAMG,QAAQC,KAAnB,WA4WKpB,CAAmB8M,IClYd0F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECXNC,IAASC,OAAOxS,EAAAC,EAAAC,cAACuS,GAAD,MAAkBC,SAASC,eAAe,SDsHpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.cf33164c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nfunction AppHeader(props) {\r\n  const { classes, appTitle } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {appTitle}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nAppHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AppHeader);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    float:'right',\r\n  },\r\n});\r\n\r\nfunction ImageUploader(props) {\r\n  const { classes, onFileChooserChange } = props;\r\n\r\n  return (\r\n  <div>\r\n      <Button size=\"small\" variant=\"outlined\" color=\"primary\" className={classes.button}>\r\n      <label htmlFor=\"upload\">Add your own images</label>\r\n      </Button>\r\n      <input type=\"file\" onChange={onFileChooserChange} id=\"upload\" style={{display:'none'}} />\r\n  </div>\r\n  );\r\n}\r\n\r\nImageUploader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImageUploader);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ImageUploader from './ImageUploader';\r\n\r\nconst styles = theme => ({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: '100%', \r\n    height: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n    /*flex-flow: shorthand for flex-direction, flex-wrap */\r\n    justifyContent: 'space-evenly',\r\n    alignItems:'flex-start',\r\n    alignContent:'flex-start',\r\n  },\r\n  details1: {\r\n    width:'40%',\r\n    order: '1',\r\n\t  flexGrow: '1',\r\n  },\r\n  details2: {\r\n    width:'40%',\r\n    order: '2',\r\n    flexGrow: '1',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction AppHeaderSub(props) {\r\n  const { classes, onFileChooserChange } = props;\r\n\r\n  return (\r\n        <Card className={classes.root}>\r\n          <CardContent className={classes.details1}>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              Click an image below to process\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent className={classes.details2}>\r\n              <ImageUploader\r\n                  onFileChooserChange={onFileChooserChange}>\r\n              </ImageUploader>\r\n          </CardContent>\r\n        </Card>\r\n  );\r\n}\r\n\r\nAppHeaderSub.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AppHeaderSub);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  imgSelected: {\r\n    borderBottom:'6px dashed #999'\r\n  },\r\n  imgCursor: {\r\n    cursor: 'pointer',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBarSelected: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(245,245,245,0.7) 0%, rgba(204,204,204,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\nclass AppGallery extends React.Component {\r\n\r\n  render() {\r\n    const { classes, galleryImagesJSON, handleGalleryImageClick, removeImage, imageMainSource  } = this.props;\r\n    \r\n    return (\r\n      <div className={classes.root} >\r\n        <GridList className={classes.gridList} cols={2.5}>\r\n          {galleryImagesJSON.map(row => ( \r\n            <GridListTile \r\n              key={row.id} \r\n              className={imageMainSource === row.full_path ? classes.imgSelected : \"\"}>\r\n              <img \r\n                className={classNames(classes.imgCursor)} \r\n                src={row.full_path} \r\n                onClick={handleGalleryImageClick}  \r\n                id={row.id} \r\n                alt=\"\" />\r\n              <GridListTileBar\r\n                title=\"\"\r\n                classes={{\r\n                  root: (imageMainSource === row.full_path ? classes.titleBarSelected : classes.titleBar),\r\n                  title: classes.title,\r\n                }}\r\n                actionIcon={\r\n                  (row.delete === 1 &&\r\n                  <IconButton onClick={() => removeImage(row.id)} color=\"secondary\" className={classes.button} aria-label=\"Delete\">\r\n                      <DeleteIcon />\r\n                  </IconButton>\r\n                  )\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppGallery.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AppGallery);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/*\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n*/\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, variant} = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nconst styles2 = theme => ({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass CustomizedSnackbars extends React.Component {\r\n  render() {\r\n    const { classes, successMsg, successMsgState, successMsgTimer, successMsgType } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          open={successMsgState}\r\n          autoHideDuration={successMsgTimer}\r\n          /*onClose={this.handleClose}*/\r\n        >\r\n        <MySnackbarContentWrapper\r\n            /*onClose={this.handleClose}*/\r\n            variant={successMsgType}\r\n            message={successMsg}\r\n            className={classes.margin}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomizedSnackbars.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles2)(CustomizedSnackbars);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport red from '@material-ui/core/colors/red';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport TagFaces from '@material-ui/icons/TagFaces';\r\nimport DisFace from '@material-ui/icons/SentimentDissatisfied';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst styles = theme => ({\r\n  root1: {\r\n    minWidth: 275,\r\n    maxWidth: '100%', \r\n    height: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n    /*flex-flow: shorthand for flex-direction, flex-wrap */\r\n    justifyContent: 'space-evenly',\r\n    alignItems:'flex-start',\r\n    alignContent:'flex-start',\r\n  },\r\n  root2: {\r\n    minWidth: 275,\r\n    maxWidth: '100%', \r\n    height: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n    /*flex-flow: shorthand for flex-direction, flex-wrap */\r\n    justifyContent: 'space-evenly',\r\n    alignItems:'flex-start',\r\n    alignContent:'flex-start',\r\n  },\r\n  card1: {\r\n    width:'40%',\r\n    order: '1',\r\n\t  flexGrow: '1',\r\n  },\r\n  card2: {\r\n    width:'40%',\r\n    order: '2',\r\n    flexGrow: '1',\r\n  },\r\n  card3: {\r\n    width:'40%',\r\n    order: '3',\r\n    flexGrow: '1',\r\n  },\r\n  primaryAvatar: {\r\n    color: '#fff',\r\n    backgroundColor: '#3f51b5'\r\n  },\r\n  secondaryAvatar: {\r\n    color: '#fff',\r\n    backgroundColor: '#f50057'\r\n  },\r\n  notDetected:{\r\n    color:'#666666',\r\n  },\r\n  notDetectedDiv: {\r\n    padding:'20px',\r\n    margin:'15px',\r\n    textAlign:'center',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n    margin: 10,\r\n  },\r\n\r\n\r\n\r\n  card: {\r\n    maxWidth: '100%', \r\n    height: 'auto',\r\n    justifyContent:'center',\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    backgroundPosition: 'center top'\r\n  },\r\n  avrow: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  bigAvatar: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass Result extends Component {\r\n  render(){\r\n    const { classes, imageAnalyzeResult, imageMainSource } = this.props;\r\n    const rows = imageAnalyzeResult.map((row, index) => {\r\n        return (\r\n        <div key={index}>\r\n          <div className={classes.root1}>\r\n                <Chip\r\n                  avatar={<Avatar size=\"large\" alt=\"Male\" src={imageMainSource} />}\r\n                  label={row.faceAttributes.gender + \" - \" + row.faceAttributes.age + \" y/o\"}\r\n                  className={classes.chip}\r\n                  color={row.faceAttributes.gender === 'male' ? 'primary' : 'secondary'}\r\n                />\r\n                <Chip\r\n                  avatar={\r\n                    <Avatar>\r\n                      {(row.faceAttributes.smile * 100).toFixed(1) > 50 ? <TagFaces /> : <DisFace />}\r\n                    </Avatar>\r\n                  }\r\n                  label={\"Smile \" + (row.faceAttributes.smile * 100).toFixed(1) + \"%\"}\r\n                  className={classes.chip}\r\n                />\r\n                <Chip \r\n                  label={\"Makeup\"}\r\n                  icon={(row.faceAttributes.makeup.eyeMakeup === true || row.faceAttributes.makeup.lipMakeup === true) ? <DoneIcon /> : <HighlightOff/>}\r\n                  className={classes.chip}\r\n                />\r\n\r\n                <Chip \r\n                  label=\"Glasses\"\r\n                  icon={(row.faceAttributes.glasses === \"NoGlasses\") ? <HighlightOff/> : <DoneIcon />}\r\n                  className={classes.chip}\r\n                />\r\n\r\n                \r\n          </div>\r\n          <div  className={classes.root2}>\r\n            <Card className={classes.card1}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"\" className={row.faceAttributes.gender === 'male' ? classes.primaryAvatar : classes.secondaryAvatar}>\r\n                    HH\r\n                  </Avatar>\r\n                }\r\n                title=\"Hair\"\r\n                subheader=\"head\"\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <Grid container spacing={16}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                      <List dense={true}>\r\n                          <ListItem>\r\n                              <ListItemText\r\n                                primary=\"Beard\"\r\n                                secondary={(row.faceAttributes.facialHair.beard * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Moustache\"\r\n                                secondary={(row.faceAttributes.facialHair.moustache * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"SideBurns\"\r\n                                secondary={(row.faceAttributes.facialHair.sideburns * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Bald\"\r\n                                secondary={(row.faceAttributes.hair.bald * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className={classes.card2}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"Recipe\" className={row.faceAttributes.gender === 'male' ? classes.primaryAvatar : classes.secondaryAvatar}>\r\n                    BE\r\n                  </Avatar>\r\n                }\r\n                title=\"Bad\"\r\n                subheader=\"emotion\"\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <Grid container spacing={16}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                      <List dense={true}>\r\n                          <ListItem>\r\n                              <ListItemText\r\n                                primary=\"Anger\"\r\n                                secondary={(row.faceAttributes.emotion.anger * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Contempt\"\r\n                                secondary={(row.faceAttributes.emotion.contempt * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Disgust\"\r\n                                secondary={(row.faceAttributes.emotion.disgust * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Fear\"\r\n                                secondary={(row.faceAttributes.emotion.fear * 100).toFixed(1) + \"%\"}\r\n                            />\r\n                          </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className={classes.card3}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"Recipe\" className={row.faceAttributes.gender === 'male' ? classes.primaryAvatar : classes.secondaryAvatar}>\r\n                    GE\r\n                  </Avatar>\r\n                }\r\n                title=\"Good\"\r\n                subheader=\"emotion\"\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <Grid container spacing={16}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                      <List dense={true}>\r\n                          <ListItem>\r\n                              <ListItemText\r\n                                primary=\"Happiness\"\r\n                                secondary={(row.faceAttributes.emotion.happiness * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Neutral\"\r\n                                secondary={(row.faceAttributes.emotion.neutral * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Sadness\"\r\n                                secondary={(row.faceAttributes.emotion.sadness * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Surprise\"\r\n                                secondary={(row.faceAttributes.emotion.surprise * 100).toFixed(1) + \"%\"}\r\n                              />\r\n                          </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n      {Object.keys(rows).length > 0 ? (\r\n        <div>{rows}</div>\r\n      ) : (\r\n        <div className={classes.notDetectedDiv}>\r\n          <h3 className={classes.notDetected}>No facial features detected!</h3>\r\n          <p className={classes.notDetected}>Click on a different image</p>\r\n        </div>\r\n      )}\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nResult.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Result);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    height:'5px',\r\n    backgroundColor:'#eee',\r\n  },\r\n  inner: {\r\n      height:'5px',\r\n      backgroundColor:'#e63131',\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: '#B2DFDB',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#00695C',\r\n  },\r\n};\r\n\r\nclass ProgressBar extends Component {\r\n    state = {\r\n        opacity: 1,\r\n    };\r\n    render(){\r\n        const { classes, progressBarState } = this.props;\r\n        return (\r\n        <div className={classes.root}>\r\n        {progressBarState && \r\n            <div className={classes.inner} style={{opacity:(this.state.opacity)}}></div>\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProgressBar);","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'; // import axios, { post } from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppHeader from './AppHeader';\nimport AppHeaderSub from './AppHeaderSub';\nimport AppGallery from './AppGallery';\nimport SnackbarMsg from './SnackbarMsg';\nimport Result from './Result';\nimport ProgressBar from './ProgressBar';\n\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 2,\n  },\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: `${theme.spacing.unit * 3}px`,\n  },\n  gridinner: {\n    maxWidth:600,\n  },\n  paper: {\n    padding: theme.spacing.unit,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing.unit,\n  },\n  divider: {\n    margin: `${theme.spacing.unit * 2}px 0`,\n  },\n});\n\nclass FaceDetector extends Component {\n    constructor(props){\n      super(props);\n      this.state ={\n        gallery_images_json : [],\n        file:null,\n        uploading: false,\n        image_main_source: '',\n        image_analyze_result : [],\n        sb_msg : '',\n        sb_msg_type : '',\n        sb_msg_state : false,\n        sb_msg_timer: 5000,\n        progress_bar_state: false,\n      }\n      this.onFileChooserChange = this.onFileChooserChange.bind(this)\n      this.fileUpload = this.fileUpload.bind(this)\n      this.handleGalleryImageClick = this.handleGalleryImageClick.bind(this);\n    }\n    componentDidMount(){\n      this.refreshGallery();\n    }\n    refreshGallery() {\n      this.setState({\n        progress_bar_state: true,\n      });\n\n      let self = this;\n      // process.env.REACT_APP_REFRESH_GALLERY\n      let url = process.env.REACT_APP_REFRESH_GALLERY;\n      axios.get(url)\n        .then(function (response) {\n          //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n          // handle success\n          if (response.data.data.length < 1) {\n            self.setState({\n              progress_bar_state: false,\n              image_main_source: ''\n            });\n          } else {\n            let src = response.data.data[0].full_path; \n            // must do callback because src isn't set unless\n            self.setState(\n              {\n                image_main_source: src,\n                gallery_images_json: response.data.data,\n              }, () => {\n              self.analyzeImage(false,true);\n            });\n          }\n        })\n        .catch(error => self.setState({ error }));\n    }\n    setResetMessage(msg,timer=5000,msgType=\"success\") {\n      this.setState({\n        sb_msg_state : true,\n        sb_msg_type : msgType,\n        sb_msg : msg,\n        sb_msg_timer: timer,\n      });\n      setTimeout( () => {\n        this.setState({\n          sb_msg_state : false,\n          sb_msg_type : msgType,\n          sb_msg : '',\n          sb_msg_timer: 0,\n        });\n      }, timer);\n    }\n    onFileChooserChange(e) {\n      let theFile = e.target.files[0];\n      // #1 Catching wrong file types on the client\n      const types = ['image/png', 'image/jpeg', 'image/gif']\n      if (types.every(type => theFile.type !== type)) {\n        this.setResetMessage('File must be an image (.png,.jpg,.gif)!',4000, 'error')\n        return\n      }\n      \n      // #2 Catching files that are too large on the client\n      // 500000 = 500kb / 5000000 = 5000kb, 5mb\n      let maxFileSizeMb = 1000000;\n      let maxFileSizeMbText = maxFileSizeMb / 1000000;\n      if (theFile.size > maxFileSizeMb) {\n        //errs.push(`'${file.name}' is too large, please pick a smaller file`)\n        this.setResetMessage('The image uploaded was too large, it must be less than ' + maxFileSizeMbText + ' MB.',4000, 'error')\n        return\n      }\n      // put in callback to ensure state set\n      this.setState({\n        file:theFile,\n      }, () => {\n        this.fileProcess();\n      });\n    }\n    fileProcess(e) {\n      let self = this;\n      if(this.state.file !== null || this.state.file !== undefined){\n          // turn on here, off in analyzeImage\n          this.setState({\n            progress_bar_state: true,\n          });\n\n          this.fileUpload(this.state.file).then((response)=>{\n            this.setState(\n              {\n                file:null,\n                uploading: false,\n                gallery_images_json : [response.data.data, ...this.state.gallery_images_json],\n                image_main_source : response.data.data.full_path\n              }, () => {\n\n                let tempTimer = 1500;\n                self.setResetMessage('Image added!',tempTimer, 'success');\n                setTimeout( () => {\n                  self.analyzeImage(false,true);\n                }, tempTimer);\n\n            });\n          });\n\n      } else {\n        this.setState({\n          progress_bar_state: false,\n        });\n        this.setResetMessage('No image was selected, click \"Add Your Own Images\".',200, 'warning')\n        return\n      }\n    }\n    fileUpload(file){\n      this.setState({ uploading: true })\n      // process.env.REACT_APP_IMAGE_UPLOAD\n      const url = process.env.REACT_APP_IMAGE_UPLOAD;\n      const formData = new FormData();\n      // input field name:file_img_faces\n      formData.append('file_img_faces',file);\n  \n      const config = {\n          headers: {\n              'Access-Control-Allow-Origin': '*',\n              //'content-type': 'multipart/form-data',\n              'content-type': 'application/x-www-form-urlencoded'\n          }\n      }\n      \n      //let self = this;\n      return axios.post(url, formData,config);\n        /*\n        .then(function (response) {\n\n        })\n        .catch(error => self.setState({ error }));\n  \n        return response;\n        */\n    }\n    removeImage = id => {\n      this.setState({\n        progress_bar_state: true,\n      });\n\n      let self = this;\n      // send to server for deletion\n      // process.env.REACT_APP_REMOVE_IMAGE\n      const url = process.env.REACT_APP_REMOVE_IMAGE + id;\n      const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'content-type': 'multipart/form-data',\n            'content-type': 'application/x-www-form-urlencoded'\n        }\n      }\n\n      axios.delete(url,config)\n      .then(function (response) {\n        //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n        if (response.data.data.length < 1) {\n          // didn't work, provide message here\n          self.setResetMessage('Image was not removed, please try again!',2000, 'error');\n        } else {\n          if (response.data.data[0].msg === 'deleted') {\n            // delete item from json\n            let cleanedImages = self.state.gallery_images_json.filter(image => image.id !== id);\n            let newImgSrc = cleanedImages[0].full_path;\n\n            self.setState(\n              {\n                gallery_images_json: cleanedImages,\n                image_main_source : newImgSrc\n              }, () => {\n              let tempTimer = 1500;\n              self.setResetMessage('Image removed!',tempTimer, 'success');\n              setTimeout( () => {\n                self.analyzeImage(false,true);\n              }, tempTimer);\n            });\n          }\n        }\n        this.setState({\n          progress_bar_state: false,\n        });\n      })\n      .catch(error => self.setState({ error }));\n\n    }\n    handleGalleryImageClick(event) {\n      // get id and use it in main image\n      let idClicked = event.target.id; \n      let galleryImagesJSON = this.state.gallery_images_json;\n \n      let rowImage = galleryImagesJSON.filter(function(row) {\n          if (row.id == idClicked) {\n            return row;\n          }\n      });\n      // callback to ensure set\n      this.setState(\n        {\n          image_main_source : rowImage[0].full_path,\n          progress_bar_state: true,\n        }, () => {\n        this.analyzeImage(false,true);\n      });\n\n    }\n    analyzeImage(progressBarOn=true, progressBarOff=true) {\n      if(progressBarOn) {\n        this.setState({\n          progress_bar_state: true,\n        });\n      }\n\n      // Replace <Subscription Key> with your valid subscription key.\n      // process.env.REACT_APP_SUBSCRIPTION_KEY\n      let subscriptionKey = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\n      // NOTE: You must use the same region in your REST call as you used to\n      // obtain your subscription keys. For example, if you obtained your\n      // subscription keys from westus, replace \"westcentralus\" in the URL\n      // below with \"westus\".\n      //\n      // Free trial subscription keys are generated in the westcentralus region.\n      // If you use a free trial subscription key, you shouldn't need to change \n      // this region.\n      let url =\"https://eastus2.api.cognitive.microsoft.com/face/v1.0/detect\";\n\n      // Request parameters.\n      let params = {\n          \"returnFaceId\": \"true\",\n          \"returnFaceLandmarks\": \"false\",\n          \"returnFaceAttributes\":\n              \"age,gender,headPose,smile,facialHair,glasses,emotion,\" +\n              \"hair,makeup,occlusion,accessories,blur,exposure,noise\"\n      };\n\n      // Display the image.\n      let sourceImageUrl = this.state.image_main_source;\n\n      // Perform the REST API call\n      let formData =  {\n        'url': sourceImageUrl\n      };\n  \n      const config = {\n          headers: {\n              //'Access-Control-Allow-Origin': '*',\n              //'content-type': 'application/x-www-form-urlencoded',\n              \"Content-Type\":\"application/json\",\n              \"Ocp-Apim-Subscription-Key\": subscriptionKey\n          },\n          params : params\n      }\n      \n      let self = this;\n      axios.post(url, formData,config)\n      .then(function (response) {\n        //let responseOK = response && response.status === 200 && response.statusText === 'OK';\n        if (response.statusText === \"OK\") { \n            if (response.data[0] !== undefined) {\n              self.setState({\n                image_analyze_result : response.data\n              });\n              if(progressBarOff) {\n                self.setState({\n                  progress_bar_state: false,\n                });\n              }\n              // to much with this alert\n              //self.setResetMessage('Image processed!', 900, 'success')\n            } else {\n              self.setState({\n                  image_analyze_result : []\n              });\n              if(progressBarOff) {\n                self.setState({\n                  progress_bar_state: false,\n                });\n              }\n              //self.setResetMessage('No facial image detected!', 1500, 'warning')\n            }\n        } else { \n            if(progressBarOff) {\n              self.setState({\n                progress_bar_state: false,\n              });\n            }\n            self.setResetMessage('Image was not processed!',1500, 'error')\n        }\n      })\n      .catch(error => self.setState({ error })); \n        \n    }\n    render() {\n      \n      const { classes } = this.props;\n      return(\n        <div className={classes.root} style={{'border':\"0px solid blue\"}}>\n          \n          <Grid container spacing={24} justify=\"center\" style={{'border':\"0px solid red\"}}>\n            <Grid container justify=\"center\" className={classes.gridinner} style={{'border':\"0px solid orange\"}}>\n              <Grid item xs={12} zeroMinWidth>\n                <Paper>\n                    <AppHeader appTitle=\"Facial Characteristics Detector\"></AppHeader>\n                    \n                    <ProgressBar progressBarState={this.state.progress_bar_state} />\n \n                    <AppHeaderSub\n                      onFileChooserChange={this.onFileChooserChange}>\n                    </AppHeaderSub>\n   \n                    <AppGallery \n                      imageMainSource={this.state.image_main_source}\n                      galleryImagesJSON={this.state.gallery_images_json}\n                      removeImage={this.removeImage}\n                      handleGalleryImageClick={this.handleGalleryImageClick}\n                    >\n                    </AppGallery>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} zeroMinWidth>\n                <Paper>\n                  <Result\n                    imageMainSource={this.state.image_main_source}\n                    imageAnalyzeResult={this.state.image_analyze_result}\n                  >\n                  </Result>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n          <SnackbarMsg\n            successMsgState={this.state.sb_msg_state}\n            successMsgType={this.state.sb_msg_type}\n            successMsg={this.state.sb_msg}  \n            successMsgTimer={this.state.sb_msg_timer}\n          ></SnackbarMsg>\n        </div>\n      );\n    }\n  }\n\nexport default withStyles(styles)(FaceDetector);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FaceDetector from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<FaceDetector />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}